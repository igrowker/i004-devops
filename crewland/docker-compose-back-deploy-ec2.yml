version: '3.8'

services:
  # Servicio de verificaciÃ³n de la base de datos Postgres Neon
  db-check:
    image: postgres:latest
    container_name: db-check
    restart: "no"
    entrypoint: >
      sh -c "
      echo 'Checking database connectivity and executing a query...';
      until pg_isready -h ${DB_HOST} -p ${DB_PORT} -U ${DB_USERNAME}; do
        echo 'Waiting for database to be ready...';
        sleep 2;
      done;
      echo 'Database is ready. Testing query execution...';
      PGPASSWORD=${DB_PASSWORD} psql -h ${DB_HOST} -p ${DB_PORT} -U ${DB_USERNAME} -d ${DB_NAME} -c 'SELECT 1';
      echo 'Query executed successfully. Database is operational.';
      "

    environment:
      PGPASSWORD: ${DB_PASSWORD} # Para que pg_isready pueda autenticar
    networks:
      - crewland-network
    depends_on: []

  # Servicio backend (Node.js)
  backend:
    image: igrowker/i004-crewland-back-dev-image
    container_name: crewland-backend
    environment:
      # backend api port
      PORT: ${PORT}
      # Database
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_SSL_REJECT_UNAUTHORIZED: ${DB_SSL_REJECT_UNAUTHORIZED}
      DB_SSL: ${DB_SSL}
      DATABASE_URL: ${DATABASE_URL}
      # JWT
      JWT_SECRET: ${JWT_SECRET}
      JWT_TOKEN_EXPIRED: ${JWT_TOKEN_EXPIRED}
      # twilo
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_WHATSAPP_NUMBER: ${TWILIO_WHATSAPP_NUMBER}
      # sendgrip
      SENDGRID_AUTH_TOKEN: ${SENDGRID_AUTH_TOKEN}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      SENDGRID_FROM_EMAIL: ${SENDGRID_FROM_EMAIL}
      SENDGRID_REPLY_TO: ${SENDGRID_REPLY_TO}
    ports:
      - "3000:3000"
    depends_on:
      db-check:
        condition: service_completed_successfully
    volumes:
      - /app/node_modules
    networks:
      - crewland-network

networks:
  crewland-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local